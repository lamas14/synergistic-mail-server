<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

<!--
 registering the listener to track how many users are currently logged in into the system
 -->
<listener>
<listener-class>com.synergistic.it.email.server.listener.UserSessionVO</listener-class>
</listener>

<context-param>
    <param-name>allowAccess</param-name>
    <param-value>/auth/login.htm,/customer/addCustomer.htm,/auth/sessionTimeOut.htm,/customer/uploadImage.htm</param-value>
  </context-param>

  <!-- Time is in minutes -->
  <session-config>
        <session-timeout>5</session-timeout>
  </session-config>
  
    <filter>
    <filter-name>synerFilter</filter-name>
    <filter-class>com.synergistic.it.email.server.filter.SynergisticitMailFilter</filter-class>
  </filter>
  
  <filter-mapping>
    <filter-name>synerFilter</filter-name>
    <url-pattern>*.htm</url-pattern>
  </filter-mapping>

<!-- 
ApplicationContext applicationContext=new ClassPathXmlApplicationContext("/WEB-INF/context/email-server-application-context.xml");
 -->	
 
 <context-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>/WEB-INF/context/email-server-application-context.xml</param-value>
</context-param>	

<!-- Responsible for instantiating spring root web application context container -->
  <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	

    <!-- DispatcherServlet is front controller -->
	<servlet>
		<servlet-name>email-server</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- <servlet-mapping> tag indicates what URLs will be handled by the which 
		DispatcherServlet. Here all the HTTP requests ending with .htm will be handled 
		by the ezloan DispatcherServlet. -->
	<servlet-mapping>
		<servlet-name>email-server</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	
	<!--
	 JAX-WS web service mapping
	 -->
	 

    
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>
        	com.sun.xml.ws.transport.http.servlet.WSSpringServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/soapEmailWebService</url-pattern>
    </servlet-mapping>
	
	
</web-app>